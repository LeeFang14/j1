import {
  parseStringToArray,
  rotateDirection,
  parseArrayToString,
} from "./processInput.js";

describe.each([
  {
    input: parseStringToArray(`  ** **
 *******
*********
*********
 *******
  *****
   ***
    *`),
    expected: [
      [" ", " ", "*", "*", " ", "*", "*", " ", " "],
      [" ", "*", "*", "*", "*", "*", "*", "*", " "],
      ["*", "*", "*", "*", "*", "*", "*", "*", "*"],
      ["*", "*", "*", "*", "*", "*", "*", "*", "*"],
      [" ", "*", "*", "*", "*", "*", "*", "*", " "],
      [" ", " ", "*", "*", "*", "*", "*", " ", " "],
      [" ", " ", " ", "*", "*", "*", " ", " ", " "],
      [" ", " ", " ", " ", "*", " ", " ", " ", " "],
    ],
  },
])("測試 parseStringToArray 輸入的值", ({ input, expected }) => {
  test(`returns ${expected}`, () => {
    expect(input).toEqual(expected);
  });
});

describe.each([
  {
    input: rotateDirection(
      [
        [" ", " ", "*", "*", " ", "*", "*", " ", " "],
        [" ", "*", "*", "*", "*", "*", "*", "*", " "],
        ["*", "*", "*", "*", "*", "*", "*", "*", "*"],
        ["*", "*", "*", "*", "*", "*", "*", "*", "*"],
        [" ", "*", "*", "*", "*", "*", "*", "*", " "],
        [" ", " ", "*", "*", "*", "*", "*", " ", " "],
        [" ", " ", " ", "*", "*", "*", " ", " ", " "],
        [" ", " ", " ", " ", "*", " ", " ", " ", " "],
      ],
      "right"
    ),
    expected: [
      [" ", " ", " ", " ", "*", "*", " ", " "],
      [" ", " ", " ", "*", "*", "*", "*", " "],
      [" ", " ", "*", "*", "*", "*", "*", "*"],
      [" ", "*", "*", "*", "*", "*", "*", "*"],
      ["*", "*", "*", "*", "*", "*", "*", " "],
      [" ", "*", "*", "*", "*", "*", "*", "*"],
      [" ", " ", "*", "*", "*", "*", "*", "*"],
      [" ", " ", " ", "*", "*", "*", "*", " "],
      [" ", " ", " ", " ", "*", "*", " ", " "],
    ],
  },
  {
    input: rotateDirection(
      [
        [" ", " ", "*", "*", " ", "*", "*", " ", " "],
        [" ", "*", "*", "*", "*", "*", "*", "*", " "],
        ["*", "*", "*", "*", "*", "*", "*", "*", "*"],
        ["*", "*", "*", "*", "*", "*", "*", "*", "*"],
        [" ", "*", "*", "*", "*", "*", "*", "*", " "],
        [" ", " ", "*", "*", "*", "*", "*", " ", " "],
        [" ", " ", " ", "*", "*", "*", " ", " ", " "],
        [" ", " ", " ", " ", "*", " ", " ", " ", " "],
      ],
      "left"
    ),
    expected: [
      [" ", " ", "*", "*", " ", " ", " ", " "],
      [" ", "*", "*", "*", "*", " ", " ", " "],
      ["*", "*", "*", "*", "*", "*", " ", " "],
      ["*", "*", "*", "*", "*", "*", "*", " "],
      [" ", "*", "*", "*", "*", "*", "*", "*"],
      ["*", "*", "*", "*", "*", "*", "*", " "],
      ["*", "*", "*", "*", "*", "*", " ", " "],
      [" ", "*", "*", "*", "*", " ", " ", " "],
      [" ", " ", "*", "*", " ", " ", " ", " "],
    ],
  },
])("測試 rotateDirection 輸入的值", ({ input, expected }) => {
  test(`returns ${expected}`, () => {
    expect(input).toEqual(expected);
  });
});

describe.each([
  {
    input: parseArrayToString([
      [" ", " ", " ", " ", "*", "*", " ", " "],
      [" ", " ", " ", "*", "*", "*", "*", " "],
      [" ", " ", "*", "*", "*", "*", "*", "*"],
      [" ", "*", "*", "*", "*", "*", "*", "*"],
      ["*", "*", "*", "*", "*", "*", "*", " "],
      [" ", "*", "*", "*", "*", "*", "*", "*"],
      [" ", " ", "*", "*", "*", "*", "*", "*"],
      [" ", " ", " ", "*", "*", "*", "*", " "],
      [" ", " ", " ", " ", "*", "*", " ", " "],
    ]),
    expected:
      "    **  \n   **** \n  ******\n *******\n******* \n *******\n  ******\n   **** \n    **  ",
  },
])("測試 parseArrayToString 輸入的值", ({ input, expected }) => {
  test(`returns ${expected}`, () => {
    expect(input).toBe(expected);
  });
});
